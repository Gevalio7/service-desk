const { User } = require('../src/models');
const { sequelize } = require('../config/database');

async function createTestUsers() {
  try {
    console.log('üîÑ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
    await sequelize.authenticate();
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');

    console.log('üë§ –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');

    // –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (–ø–∞—Ä–æ–ª—å –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞—Ö–µ—à–∏—Ä–æ–≤–∞–Ω –≤ –º–æ–¥–µ–ª–∏)
    const [admin, adminCreated] = await User.findOrCreate({
      where: { email: 'admin@servicedesk.com' },
      defaults: {
        username: 'admin',
        email: 'admin@servicedesk.com',
        password: 'admin123', // –ë—É–¥–µ—Ç –∑–∞—Ö–µ—à–∏—Ä–æ–≤–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
        firstName: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
        lastName: '–°–∏—Å—Ç–µ–º—ã',
        role: 'admin',
        isActive: true
      }
    });

    if (adminCreated) {
      console.log('‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–æ–∑–¥–∞–Ω:', {
        id: admin.id,
        username: admin.username,
        email: admin.email,
        role: admin.role
      });
    } else {
      console.log('‚ÑπÔ∏è –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:', {
        id: admin.id,
        username: admin.username,
        email: admin.email,
        role: admin.role
      });
    }

    // –°–æ–∑–¥–∞–µ–º –∞–≥–µ–Ω—Ç–∞ (–ø–∞—Ä–æ–ª—å –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞—Ö–µ—à–∏—Ä–æ–≤–∞–Ω –≤ –º–æ–¥–µ–ª–∏)
    const [agent, agentCreated] = await User.findOrCreate({
      where: { email: 'agent@servicedesk.com' },
      defaults: {
        username: 'agent',
        email: 'agent@servicedesk.com',
        password: 'agent123', // –ë—É–¥–µ—Ç –∑–∞—Ö–µ—à–∏—Ä–æ–≤–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
        firstName: '–ê–≥–µ–Ω—Ç',
        lastName: '–ü–æ–¥–¥–µ—Ä–∂–∫–∏',
        role: 'agent',
        isActive: true
      }
    });

    if (agentCreated) {
      console.log('‚úÖ –ê–≥–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω:', {
        id: agent.id,
        username: agent.username,
        email: agent.email,
        role: agent.role
      });
    } else {
      console.log('‚ÑπÔ∏è –ê–≥–µ–Ω—Ç —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:', {
        id: agent.id,
        username: agent.username,
        email: agent.email,
        role: agent.role
      });
    }

    console.log('\nüéâ –¢–µ—Å—Ç–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≥–æ—Ç–æ–≤—ã!');
    console.log('\nüìã –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞:');
    console.log('üë®‚Äçüíº –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä:');
    console.log('   Email: admin@servicedesk.com');
    console.log('   –ü–∞—Ä–æ–ª—å: admin123');
    console.log('   –†–æ–ª—å: admin');
    console.log('\nüë®‚Äçüíª –ê–≥–µ–Ω—Ç:');
    console.log('   Email: agent@servicedesk.com');
    console.log('   –ü–∞—Ä–æ–ª—å: agent123');
    console.log('   –†–æ–ª—å: agent');

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Å–∏—Å—Ç–µ–º–µ
    console.log('\nüìä –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ —Å–∏—Å—Ç–µ–º–µ:');
    const allUsers = await User.findAll({
      attributes: ['id', 'username', 'email', 'role', 'isActive', 'createdAt']
    });
    
    allUsers.forEach(user => {
      console.log(`- ${user.username} (${user.email}) - ${user.role} - –ê–∫—Ç–∏–≤–µ–Ω: ${user.isActive} - –°–æ–∑–¥–∞–Ω: ${user.createdAt.toLocaleDateString()}`);
    });

    process.exit(0);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', error);
    process.exit(1);
  }
}

createTestUsers();