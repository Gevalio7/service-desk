require('dotenv').config();
const { sequelize } = require('../config/database');
const { TicketContact, User, Ticket } = require('../src/models');

async function testTicketContacts() {
  try {
    console.log('–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏ TicketContact...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–æ–¥–µ–ª—å –º–æ–∂–µ—Ç –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Ç–∞–±–ª–∏—Ü–µ
    await TicketContact.findAll({ limit: 1 });
    console.log('‚úì –ú–æ–¥–µ–ª—å TicketContact —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∞ –∫ —Ç–∞–±–ª–∏—Ü–µ');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–≤—è–∑–∏
    const ticketWithContacts = await Ticket.findOne({
      include: [{
        model: TicketContact,
        include: [
          { model: User, as: 'contactUser' },
          { model: User, as: 'addedBy' }
        ]
      }],
      limit: 1
    });
    
    console.log('‚úì –°–≤—è–∑–∏ –º–µ–∂–¥—É –º–æ–¥–µ–ª—è–º–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º many-to-many —Å–≤—è–∑—å
    const ticketWithContactUsers = await Ticket.findOne({
      include: [{
        model: User,
        as: 'contacts',
        through: { attributes: ['role', 'notifyOnStatusChange'] }
      }],
      limit: 1
    });
    
    console.log('‚úì Many-to-many —Å–≤—è–∑—å —á–µ—Ä–µ–∑ TicketContact —Ä–∞–±–æ—Ç–∞–µ—Ç');
    
    console.log('üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
    process.exit(0);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.message);
    process.exit(1);
  }
}

testTicketContacts();