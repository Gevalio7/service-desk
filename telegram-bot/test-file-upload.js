const axios = require('axios');
const FormData = require('form-data');
const fs = require('fs');
const path = require('path');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const API_BASE_URL = 'http://localhost:3007/api';
const API_TOKEN = 'service-desk-api-token'; // Service token –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

// –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
const testFilePath = path.join(__dirname, 'test-attachment.txt');
const testFileContent = '–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–ª–æ–∂–µ–Ω–∏–π –≤ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–µ.\n–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: ' + new Date().toISOString();

async function testFileUpload() {
  try {
    console.log('üß™ –¢–ï–°–¢ –ó–ê–ì–†–£–ó–ö–ò –§–ê–ô–õ–û–í - –ù–∞—á–∞–ª–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
    
    // 1. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
    fs.writeFileSync(testFilePath, testFileContent);
    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω:', testFilePath);
    
    // 2. –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏–∑–≤–µ—Å—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è admin
    console.log('\nüë§ –ò—Å–ø–æ–ª—å–∑—É–µ–º admin –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...');
    const testUserId = '12345678-1234-1234-1234-123456789012'; // Admin user ID
    console.log('‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º admin –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    
    // 3. –°–æ–∑–¥–∞–µ–º –∑–∞—è–≤–∫—É
    console.log('\nüìù –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –∑–∞—è–≤–∫–∏...');
    const ticketData = {
      title: '–¢–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤ –∏–∑ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–∞',
      description: '–ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞—è–≤–∫–∏ —á–µ—Ä–µ–∑ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç',
      category: 'technical',
      priority: 'medium',
      type: 'incident',
      source: 'telegram',
      createdById: testUserId
    };
    
    const ticketResponse = await axios.post(`${API_BASE_URL}/tickets`, ticketData, {
      headers: {
        'Authorization': `Bearer ${API_TOKEN}`,
        'Content-Type': 'application/json'
      }
    });
    
    if (!ticketResponse.data || !ticketResponse.data.ticket) {
      throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É');
    }
    
    const ticket = ticketResponse.data.ticket;
    console.log('‚úÖ –ó–∞—è–≤–∫–∞ —Å–æ–∑–¥–∞–Ω–∞:', ticket.id);
    
    // 3. –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª –∫ –∑–∞—è–≤–∫–µ
    console.log('\nüìé –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞ –∫ –∑–∞—è–≤–∫–µ...');
    const formData = new FormData();
    formData.append('files', fs.createReadStream(testFilePath), {
      filename: 'test-attachment.txt',
      contentType: 'text/plain'
    });
    
    const uploadResponse = await axios.post(
      `${API_BASE_URL}/tickets/${ticket.id}/attachments`,
      formData,
      {
        headers: {
          'Authorization': `Bearer ${API_TOKEN}`,
          ...formData.getHeaders()
        },
        timeout: 30000
      }
    );
    
    if (uploadResponse.data && uploadResponse.data.attachments) {
      console.log('‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω:', uploadResponse.data.attachments[0].id);
      console.log('üìÑ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∞–π–ª–µ:', {
        id: uploadResponse.data.attachments[0].id,
        filename: uploadResponse.data.attachments[0].filename,
        originalName: uploadResponse.data.attachments[0].originalName,
        size: uploadResponse.data.attachments[0].size,
        mimeType: uploadResponse.data.attachments[0].mimeType
      });
    } else {
      throw new Error('–ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞');
    }
    
    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª –ø—Ä–∏–≤—è–∑–∞–Ω –∫ –∑–∞—è–≤–∫–µ
    console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞—è–≤–∫–∏ —Å –≤–ª–æ–∂–µ–Ω–∏–µ–º...');
    const ticketDetailsResponse = await axios.get(`${API_BASE_URL}/tickets/${ticket.id}`, {
      headers: {
        'Authorization': `Bearer ${API_TOKEN}`
      }
    });
    
    const ticketWithAttachments = ticketDetailsResponse.data.ticket;
    if (ticketWithAttachments.Attachments && ticketWithAttachments.Attachments.length > 0) {
      console.log('‚úÖ –í–ª–æ–∂–µ–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –∑–∞—è–≤–∫–µ:', ticketWithAttachments.Attachments[0].originalName);
    } else {
      console.log('‚ùå –í–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –∑–∞—è–≤–∫–µ');
    }
    
    // 5. –°–∏–º—É–ª–∏—Ä—É–µ–º –ø—Ä–æ—Ü–µ—Å—Å, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–µ
    console.log('\nü§ñ –°–∏–º—É–ª—è—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–∞...');
    
    // –°–∏–º—É–ª–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ —Å–µ—Å—Å–∏–∏ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–∞
    const telegramAttachments = [
      {
        fileId: 'test-file-id-123',
        fileUrl: 'https://api.telegram.org/file/bot123456:ABC-DEF1234ghIkl-zyx57W2v1u123ew11/documents/file_1.txt',
        fileName: 'telegram-test-file.txt',
        mimeType: 'text/plain',
        size: testFileContent.length
      }
    ];
    
    // –°–æ–∑–¥–∞–µ–º –µ—â–µ –æ–¥–Ω—É –∑–∞—è–≤–∫—É –¥–ª—è —Å–∏–º—É–ª—è—Ü–∏–∏ —Ç–µ–ª–µ–≥—Ä–∞–º –ø—Ä–æ—Ü–µ—Å—Å–∞
    const telegramTicketData = {
      title: '–ó–∞—è–≤–∫–∞ –∏–∑ —Ç–µ–ª–µ–≥—Ä–∞–º —Å –≤–ª–æ–∂–µ–Ω–∏–µ–º',
      description: '–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏ —Å —Ñ–∞–π–ª–æ–º —á–µ—Ä–µ–∑ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç',
      category: 'general',
      priority: 'low',
      type: 'service_request',
      source: 'telegram',
      createdById: testUserId
    };
    
    const telegramTicketResponse = await axios.post(`${API_BASE_URL}/tickets`, telegramTicketData, {
      headers: {
        'Authorization': `Bearer ${API_TOKEN}`,
        'Content-Type': 'application/json'
      }
    });
    
    const telegramTicket = telegramTicketResponse.data.ticket;
    console.log('‚úÖ –¢–µ–ª–µ–≥—Ä–∞–º –∑–∞—è–≤–∫–∞ —Å–æ–∑–¥–∞–Ω–∞:', telegramTicket.id);
    
    // –°–∏–º—É–ª–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Ñ–∞–π–ª–∞ (–∫–∞–∫ —ç—Ç–æ –¥–µ–ª–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—è uploadAttachmentsToTicket)
    console.log('üìé –°–∏–º—É–ª—è—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ –∏–∑ —Ç–µ–ª–µ–≥—Ä–∞–º...');
    
    const telegramFormData = new FormData();
    telegramFormData.append('files', fs.createReadStream(testFilePath), {
      filename: telegramAttachments[0].fileName,
      contentType: telegramAttachments[0].mimeType
    });
    
    const telegramUploadResponse = await axios.post(
      `${API_BASE_URL}/tickets/${telegramTicket.id}/attachments`,
      telegramFormData,
      {
        headers: {
          'Authorization': `Bearer ${API_TOKEN}`,
          ...telegramFormData.getHeaders()
        },
        timeout: 30000
      }
    );
    
    if (telegramUploadResponse.data && telegramUploadResponse.data.attachments) {
      console.log('‚úÖ –§–∞–π–ª –∏–∑ —Ç–µ–ª–µ–≥—Ä–∞–º —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω:', telegramUploadResponse.data.attachments[0].originalName);
    }
    
    console.log('\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!');
    console.log('\nüìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:');
    console.log('- –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞—è–≤–∫–∏: ‚úÖ');
    console.log('- –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞ –∫ –∑–∞—è–≤–∫–µ: ‚úÖ');
    console.log('- –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–ª–æ–∂–µ–Ω–∏—è –≤ –∑–∞—è–≤–∫–µ: ‚úÖ');
    console.log('- –°–∏–º—É–ª—è—Ü–∏—è —Ç–µ–ª–µ–≥—Ä–∞–º –ø—Ä–æ—Ü–µ—Å—Å–∞: ‚úÖ');
    
  } catch (error) {
    console.error('‚ùå –û–®–ò–ë–ö–ê –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:', error.message);
    if (error.response) {
      console.error('üìÑ –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', error.response.data);
      console.error('üî¢ –°—Ç–∞—Ç—É—Å:', error.response.status);
    }
    console.error('üìö –°—Ç–µ–∫ –æ—à–∏–±–∫–∏:', error.stack);
  } finally {
    // –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
    if (fs.existsSync(testFilePath)) {
      fs.unlinkSync(testFilePath);
      console.log('üóëÔ∏è –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª —É–¥–∞–ª–µ–Ω');
    }
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testFileUpload();