const axios = require('axios');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const API_BASE_URL = 'http://localhost:3007/api';
const SERVICE_API_TOKEN = 'service-desk-api-token';

// –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç API
const apiClient = axios.create({
  baseURL: API_BASE_URL,
  headers: {
    'Authorization': `Bearer ${SERVICE_API_TOKEN}`,
    'Content-Type': 'application/json'
  }
});

async function createTestTicket() {
  console.log('üé´ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –∑–∞—è–≤–∫–∏...\n');

  try {
    // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const testTelegramId = '123456789';
    const userResponse = await apiClient.get(`/users/telegram/${testTelegramId}`);
    const user = userResponse.data.user;
    
    console.log('üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω:', user.firstName, user.lastName);
    
    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞—è–≤–∫—É
    const ticketData = {
      title: '–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –∏–∑ Telegram –±–æ—Ç–∞',
      description: '–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –∫–æ–º–∞–Ω–¥—ã /tickets –≤ Telegram –±–æ—Ç–µ.',
      category: 'technical',
      priority: 'medium',
      type: 'incident',
      source: 'telegram',
      createdById: user.id
    };
    
    const ticketResponse = await apiClient.post('/tickets', ticketData);
    const ticket = ticketResponse.data.ticket;
    
    console.log('‚úÖ –ó–∞—è–≤–∫–∞ —Å–æ–∑–¥–∞–Ω–∞:', {
      id: ticket.id.substring(0, 8),
      title: ticket.title,
      status: ticket.status,
      priority: ticket.priority,
      category: ticket.category
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞—è–≤–∫–∞ –ø–æ—è–≤–∏–ª–∞—Å—å –≤ —Å–ø–∏—Å–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const ticketsResponse = await apiClient.get('/tickets', {
      params: {
        createdById: user.id,
        limit: 10,
        sortBy: 'createdAt',
        sortOrder: 'DESC'
      }
    });
    
    console.log('\nüìã –ó–∞—è–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', {
      count: ticketsResponse.data.tickets.length,
      tickets: ticketsResponse.data.tickets.map(t => ({
        id: t.id.substring(0, 8),
        title: t.title,
        status: t.status,
        createdAt: new Date(t.createdAt).toLocaleString('ru-RU')
      }))
    });
    
    console.log('\nüéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ! –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–º–∞–Ω–¥—É /tickets –≤ Telegram –±–æ—Ç–µ.');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', {
      message: error.message,
      status: error.response?.status,
      data: error.response?.data
    });
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –∑–∞—è–≤–∫–∏
createTestTicket();