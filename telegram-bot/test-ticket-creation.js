const axios = require('axios');

// –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞—è–≤–∫–∏ —á–µ—Ä–µ–∑ API —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
async function testTicketCreation() {
  try {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏ —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏...');
    
    // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    const loginResponse = await axios.post('http://localhost:3007/api/auth/login', {
      email: 'admin@example.com',
      password: 'admin123'
    });
    
    const token = loginResponse.data.token;
    console.log('‚úÖ –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω');
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–∞–∂–¥—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
    const categories = [
      { category: 'technical', type: 'incident', description: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–±–ª–µ–º–∞' },
      { category: 'billing', type: 'service_request', description: '–í–æ–ø—Ä–æ—Å –ø–æ –±–∏–ª–ª–∏–Ω–≥—É' },
      { category: 'general', type: 'service_request', description: '–û–±—â–∏–π –≤–æ–ø—Ä–æ—Å' },
      { category: 'feature_request', type: 'change_request', description: '–ó–∞–ø—Ä–æ—Å –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–∏' }
    ];
    
    for (const testCase of categories) {
      try {
        const ticketData = {
          title: `–¢–µ—Å—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ${testCase.category}`,
          description: testCase.description,
          category: testCase.category,
          priority: 'medium',
          type: testCase.type,
          source: 'telegram',
          createdById: '12345678-1234-1234-1234-123456789012' // ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        };
        
        console.log(`\nüìù –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞—è–≤–∫–∏ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: ${testCase.category}`);
        console.log('–î–∞–Ω–Ω—ã–µ:', JSON.stringify(ticketData, null, 2));
        
        const response = await axios.post('http://localhost:3007/api/tickets', ticketData, {
          headers: {
            'Authorization': `Bearer ${token}`,
            'Content-Type': 'application/json'
          }
        });
        
        if (response.data && response.data.ticket) {
          console.log(`‚úÖ –ó–∞—è–≤–∫–∞ —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ! ID: ${response.data.ticket.id.substring(0, 8)}`);
        } else {
          console.log('‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç:', response.data);
        }
        
      } catch (error) {
        console.log(`‚ùå –û—à–∏–±–∫–∞ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ${testCase.category}:`, error.response?.data || error.message);
      }
    }
    
    console.log('\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.response?.data || error.message);
  }
}

testTicketCreation();