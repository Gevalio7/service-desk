const axios = require('axios');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const API_BASE_URL = 'http://localhost:3007/api';
const SERVICE_API_TOKEN = 'service-desk-api-token';

// –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç API
const apiClient = axios.create({
  baseURL: API_BASE_URL,
  headers: {
    'Authorization': `Bearer ${SERVICE_API_TOKEN}`,
    'Content-Type': 'application/json'
  }
});

async function testTelegramBotAPI() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –¥–ª—è Telegram –±–æ—Ç–∞...\n');

  try {
    // –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ Telegram ID
    console.log('1Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ Telegram ID...');
    const testTelegramId = '123456789'; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π ID
    
    try {
      const userResponse = await apiClient.get(`/users/telegram/${testTelegramId}`);
      console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω:', userResponse.data.user);
      
      const user = userResponse.data.user;
      
      // –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞—è–≤–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      console.log('\n2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞—è–≤–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
      const ticketsResponse = await apiClient.get('/tickets', {
        params: {
          createdById: user.id,
          limit: 10,
          sortBy: 'createdAt',
          sortOrder: 'DESC'
        }
      });
      
      console.log('‚úÖ –ó–∞—è–≤–∫–∏ –ø–æ–ª—É—á–µ–Ω—ã:', {
        count: ticketsResponse.data.tickets.length,
        tickets: ticketsResponse.data.tickets.map(t => ({
          id: t.id.substring(0, 8),
          title: t.title,
          status: t.status,
          createdAt: t.createdAt
        }))
      });
      
    } catch (userError) {
      if (userError.response && userError.response.status === 404) {
        console.log('‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
        
        // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–Ω—É–∂–Ω—ã –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∞)
        console.log('‚ÑπÔ∏è –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω—É–∂–Ω—ã –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.');
        console.log('‚ÑπÔ∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–∑–¥–∞–π—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π Telegram ID.');
      } else {
        throw userError;
      }
    }
    
    // –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—â–µ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ API
    console.log('\n3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—â–µ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ –∑–∞—è–≤–∫–∞–º...');
    const allTicketsResponse = await apiClient.get('/tickets', {
      params: {
        limit: 5,
        sortBy: 'createdAt',
        sortOrder: 'DESC'
      }
    });
    
    console.log('‚úÖ –û–±—â–∏–π —Å–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫ –ø–æ–ª—É—á–µ–Ω:', {
      count: allTicketsResponse.data.tickets.length,
      total: allTicketsResponse.data.pagination.total
    });
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ API:', {
      message: error.message,
      status: error.response?.status,
      data: error.response?.data
    });
    
    if (error.code === 'ECONNREFUSED') {
      console.log('\nüí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
      console.log('   - –ë—ç–∫–µ–Ω–¥ –Ω–µ –∑–∞–ø—É—â–µ–Ω (–ø–æ—Ä—Ç 3007)');
      console.log('   - –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π URL API');
      console.log('   - –ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç—å—é');
    }
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testTelegramBotAPI();