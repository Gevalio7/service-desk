const axios = require('axios');

const BASE_URL = 'http://localhost:3007/api';

async function testUserUpdate() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...\n');
  
  try {
    // 1. –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log('1Ô∏è‚É£ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
    const registerResponse = await axios.post(`${BASE_URL}/auth/register`, {
      username: 'testuser2',
      email: 'test2@example.com',
      password: 'password123',
      firstName: '–ò–≤–∞–Ω',
      lastName: '–ü–µ—Ç—Ä–æ–≤'
    });
    
    console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω:', registerResponse.data.user.firstName, registerResponse.data.user.lastName);
    const token = registerResponse.data.token;
    
    // 2. –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è
    console.log('\n2Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
    const profileResponse = await axios.get(`${BASE_URL}/auth/profile`, {
      headers: { Authorization: `Bearer ${token}` }
    });
    
    console.log('‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—É—á–µ–Ω:', profileResponse.data.user.firstName, profileResponse.data.user.lastName);
    
    // 3. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø–æ–ª—è–º–∏
    console.log('\n3Ô∏è‚É£ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø–æ–ª—è–º–∏...');
    const updateResponse = await axios.put(`${BASE_URL}/auth/profile`, {
      firstName: '–ò–≤–∞–Ω',
      lastName: '–°–∏–¥–æ—Ä–æ–≤',
      department: 'IT –æ—Ç–¥–µ–ª',
      company: '–¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–ø–∞–Ω–∏—è',
      telegramId: '@ivan_sidorov'
    }, {
      headers: { Authorization: `Bearer ${token}` }
    });
    
    console.log('‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω:', updateResponse.data.user.firstName, updateResponse.data.user.lastName);
    console.log('   –û—Ç–¥–µ–ª:', updateResponse.data.user.department);
    console.log('   –ö–æ–º–ø–∞–Ω–∏—è:', updateResponse.data.user.company);
    console.log('   Telegram ID:', updateResponse.data.user.telegramId);
    
    // 4. –¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ - –ø–æ–ø—ã—Ç–∫–∞ –æ–±–Ω–æ–≤–∏—Ç—å —Å –ø—É—Å—Ç—ã–º–∏ –ø–æ–ª—è–º–∏
    console.log('\n4Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ (–ø—É—Å—Ç—ã–µ –ø–æ–ª—è)...');
    try {
      await axios.put(`${BASE_URL}/auth/profile`, {
        firstName: '',
        lastName: ''
      }, {
        headers: { Authorization: `Bearer ${token}` }
      });
      console.log('‚ùå –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∞ - —ç—Ç–æ –æ—à–∏–±–∫–∞!');
    } catch (validationError) {
      console.log('‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è —Å—Ä–∞–±–æ—Ç–∞–ª–∞:', validationError.response.data.message);
    }
    
    // 5. –¢–µ—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ userController (–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω)
    console.log('\n5Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ userController...');
    try {
      const userUpdateResponse = await axios.put(`${BASE_URL}/users/${profileResponse.data.user.id}`, {
        firstName: '–ê–ª–µ–∫—Å–µ–π',
        lastName: '–ò–≤–∞–Ω–æ–≤',
        department: '–ü–æ–¥–¥–µ—Ä–∂–∫–∞',
        company: '–ù–æ–≤–∞—è –∫–æ–º–ø–∞–Ω–∏—è'
      }, {
        headers: { Authorization: `Bearer ${token}` }
      });
      
      console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω —á–µ—Ä–µ–∑ userController:', userUpdateResponse.data.user.firstName, userUpdateResponse.data.user.lastName);
    } catch (userUpdateError) {
      console.log('‚ÑπÔ∏è –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ userController:', userUpdateError.response?.data?.message || userUpdateError.message);
    }
    
    console.log('\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–∞—Ö:', error.response?.data || error.message);
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
testUserUpdate();