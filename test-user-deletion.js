const axios = require('axios');

const API_BASE = 'http://localhost:3007/api';

async function testUserDeletion() {
  try {
    console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...\n');

    // 1. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
    console.log('1. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...');
    const loginResponse = await axios.post(`${API_BASE}/auth/login`, {
      email: 'admin@example.com',
      password: 'admin123'
    });
    
    const adminToken = loginResponse.data.token;
    console.log('‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');

    // 2. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log('\n2. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
    const createUserResponse = await axios.post(`${API_BASE}/users`, {
      username: 'testuser_deletion',
      email: 'testdeletion@example.com',
      password: 'password123',
      firstName: '–¢–µ—Å—Ç',
      lastName: '–£–¥–∞–ª–µ–Ω–∏—è',
      role: 'client'
    }, {
      headers: { Authorization: `Bearer ${adminToken}` }
    });
    
    const testUserId = createUserResponse.data.user.id;
    console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω —Å ID: ${testUserId}`);

    // 3. –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ—è–≤–∏–ª—Å—è –≤ —Å–ø–∏—Å–∫–µ
    console.log('\n3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–æ —É–¥–∞–ª–µ–Ω–∏—è...');
    const usersBeforeResponse = await axios.get(`${API_BASE}/users`, {
      headers: { Authorization: `Bearer ${adminToken}` }
    });
    
    const usersBefore = usersBeforeResponse.data.users;
    const testUserBefore = usersBefore.find(u => u.id === testUserId);
    
    if (testUserBefore) {
      console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ: ${testUserBefore.firstName} ${testUserBefore.lastName} (isActive: ${testUserBefore.isActive})`);
    } else {
      console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ');
      return;
    }

    // 4. –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–º—è–≥–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ)
    console.log('\n4. –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
    await axios.delete(`${API_BASE}/users/${testUserId}`, {
      headers: { Authorization: `Bearer ${adminToken}` }
    });
    console.log('‚úÖ –ó–∞–ø—Ä–æ—Å –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω');

    // 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è (–¥–æ–ª–∂–µ–Ω –∏—Å—á–µ–∑–Ω—É—Ç—å –∏–∑ —Å–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö)
    console.log('\n5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è...');
    const usersAfterResponse = await axios.get(`${API_BASE}/users`, {
      headers: { Authorization: `Bearer ${adminToken}` }
    });
    
    const usersAfter = usersAfterResponse.data.users;
    const testUserAfter = usersAfter.find(u => u.id === testUserId);
    
    if (!testUserAfter) {
      console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏—Å—á–µ–∑ –∏–∑ —Å–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–ø—Ä–∞–≤–∏–ª—å–Ω–æ!)');
    } else {
      console.log(`‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—Å–µ –µ—â–µ –≤ —Å–ø–∏—Å–∫–µ: ${testUserAfter.firstName} ${testUserAfter.lastName} (isActive: ${testUserAfter.isActive})`);
    }

    // 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º isActive=false (–¥–æ–ª–∂–µ–Ω –ø–æ–∫–∞–∑–∞—Ç—å —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
    console.log('\n6. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–ø–∏—Å–∫–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');
    const inactiveUsersResponse = await axios.get(`${API_BASE}/users?isActive=false`, {
      headers: { Authorization: `Bearer ${adminToken}` }
    });
    
    const inactiveUsers = inactiveUsersResponse.data.users;
    const testUserInactive = inactiveUsers.find(u => u.id === testUserId);
    
    if (testUserInactive) {
      console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö: ${testUserInactive.firstName} ${testUserInactive.lastName} (isActive: ${testUserInactive.isActive})`);
    } else {
      console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö');
    }

    // 7. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º isActive=true (–Ω–µ –¥–æ–ª–∂–µ–Ω –ø–æ–∫–∞–∑–∞—Ç—å —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
    console.log('\n7. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');
    const activeUsersResponse = await axios.get(`${API_BASE}/users?isActive=true`, {
      headers: { Authorization: `Bearer ${adminToken}` }
    });
    
    const activeUsers = activeUsersResponse.data.users;
    const testUserActive = activeUsers.find(u => u.id === testUserId);
    
    if (!testUserActive) {
      console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö (–ø—Ä–∞–≤–∏–ª—å–Ω–æ!)');
    } else {
      console.log(`‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö: ${testUserActive.firstName} ${testUserActive.lastName}`);
    }

    console.log('\nüéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!');
    console.log('\nüìã –†–µ–∑—é–º–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π:');
    console.log('- Backend —Ç–µ–ø–µ—Ä—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
    console.log('- –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–µ–ª–∞–µ—Ç –º—è–≥–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ (isActive = false)');
    console.log('- –ü–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —É–¥–∞–ª–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –ø–æ—è–≤–ª—è—é—Ç—Å—è –≤ —Å–ø–∏—Å–∫–µ');
    console.log('- –ú–æ–∂–Ω–æ —è–≤–Ω–æ –∑–∞–ø—Ä–æ—Å–∏—Ç—å –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º isActive=false');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.response?.data || error.message);
  }
}

testUserDeletion();